/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'jacoco'
}

/**
 * 绑定编译和运行的jdk版本1.8
 */
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-XDignore.symbol.file'
    options.fork = true
    options.forkOptions.executable = 'javac'
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8';

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

/**
 * 定义资源集
 * main源码包
 * test单测包
 * jmh基准测试包
 */
sourceSets {
    main
    test
    jmh
}

javadoc {
    options {
        encoding "UTF-8";
        charSet 'UTF-8';
        author true;
        version true;
        header = project.name;
        links "http://docs.oracle.com/javase/8/docs/api/";
    }
}
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources';
    from sourceSets.main.allJava;
}


task javadocJar(type: Jar) {
    from javadoc;
    archiveClassifier = 'javadoc';
}

artifacts {
    archives jar
    archives sourcesJar
}

dependencies {
    // log
    api 'org.apache.logging.log4j:log4j-api:2.17.0';
    api 'org.apache.logging.log4j:log4j-core:2.17.0';
    api 'org.apache.logging.log4j:log4j-web:2.17.0';
    api 'org.slf4j:slf4j-api:1.7.30';
    api 'com.lmax:disruptor:3.4.4';
    // 桥接：告诉slf4j使用Log4j2
    api 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.0';
    // 桥接：告诉commons logging使用Log4j2
    api 'org.apache.logging.log4j:log4j-jcl:2.17.0';

    // utils io
    api 'commons-io:commons-io:2.8.0';
    // utils xml
    api 'org.dom4j:dom4j:2.1.3';
    // utils lang
    api 'org.apache.commons:commons-lang3:3.11';
    // utils collection
    api 'org.apache.commons:commons-collections4:4.4';

    api('com.github.silencesu:Easy3dNav:1.1.0') {
        exclude group: "ch.qos.logback", module: "logback-classic"
    }

    //    implementation('com.github.silencesu:Easy3dNav:1.1.0') {
//        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
//    };

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.jmockit:jmockit:1.49'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // 保证jmh目录下java代码能顺利import其他main目录下等代码
    jmhImplementation project
    jmhImplementation 'org.openjdk.jmh:jmh-core:1.24'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.24'
}

test {
    useJUnitPlatform()
    maxParallelForks(1)
    ignoreFailures(false)
    failFast(true)

    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
            def startItem = '|  ', endItem = '  |'
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
        }
    }
    reports.html.enabled = false
    reports.junitXml.enabled = false
}

task coverage(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    sourceSets sourceSets.main, sourceSets.jmh


}

coverage.dependsOn {
    project.test
}


repositories {
    //腾讯云的国内镜像
    maven { url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public' }
}


tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport